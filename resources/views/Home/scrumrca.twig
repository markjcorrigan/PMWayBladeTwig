{% extends 'base.twig' %}
{% block title %} {% if not user %}PMWay{% endif %} {% if user %}Improving Scrum{% endif %}  {% endblock %}
{% block body %}
{% if user %}

<!--
<link rel="stylesheet" href="/bootstrapfourthreeone/css/bootstrap.css" />



	<link rel="stylesheet" href="/bootstrapfourthreeone/fontawesomeprowebfivetwo/css/all.css">
	<link rel="stylesheet" href="/bootstrapfourthreeone/css/jquery-ui.css">
	<link rel="stylesheet" href="/css/styles.css"> -->

<div class="container" align="left">
  <h3>Improving For Professional Scrum</h3>
  <hr>
  <p><strong>Find Out How To Continuously Improve Your Scrum Practice</strong></p>
  <div class="d-flex ">
    <div class="p-2 flex-fill"><a name="top"></a>
      <ol>
        <li><a href="#indexa">Seven Key Improvement Areas to Improve Scrum Practice</a></li>
        <li><a href="#indexb">Five Other Capability Improvement Areas</a></li>
        <li><a href="#indexc">Seven Types of Scrum Dysfunction</a></li>
        <li><a href="#rca">Root Cause Analysis</a></li>
      </ol>
    </div>
    <div class="p-5 flex-fill">
      <hr>
      <p align="left"><strong>Note:</strong> PMWay suggests that any Scrum team wishing to improve
        their &quot;<a href="/gamestats" target="_blank">game stats</a>&quot; (to become Professional Practitioners of Scrum), should focus their effort 100% on the advice found below: To GET IT, to DO IT a.s.a.p!</p>
      <hr>
    </div>
  </div>
  <hr>
  <p>Scrum is a lightweight framework that helps teams create valuable <a href="/release" target="_blank">releasable</a> <a href="/productincrement" target="_blank">products</a> frequently.&nbsp; <br>
    The rules that exist for Scrum practice are important to ensure transparency, to enable effective inspecting and adapting, to reduce waste, and to enable business agility.<br>
    <br>
    The Scrum Value Model below shows the Vision, Product Roadmap, Release
    Plan and Products Released areas.&nbsp; Often these &quot;squeaky wheels,&quot; if given
    oil, will really help the team to &quot;up their game stats.&quot; Achieving
    improvement in these core areas, sprint by sprint, is not easy to
    get right.&nbsp; However, PMWay asserts that focusing improvements here (<b>as soon
    as possible!</b>)
    will be what ultimately sorts the poorly
    run scrum
    team from the great scrum team!&nbsp; <br>
    Why don't you read below and see if you agree with the assertion?</p>
 <!-- <p align="center"><img alt="Scrum Value Model" class="img-fluid" src="/images/scrumvaluedessence.jpg"></p>-->
 <!--scrumvaluemodelessence.jpg  with pmway.hopto.org link-->
 <p align="center"><img alt="Scrum Value Model" class="img-fluid" src="/images/scrumvaluemodelessence.jpg">


  <p>No matter how experienced, every team can improve its ability to inspect and adapt to deliver valuable Product Increments. Customers are continually evolving, and their needs are constantly changing. Competitors are continually evolving and adapting as well. Likewise, technologies are constantly changing, enabling new capabilities while also creating new challenges to overcome. New team members bring new skills and insights but may change the dynamics of the team. Meeting these challenges means not only mastering the delivery of great products by using <a href="/empirical" target="_blank">empiricism</a> (<a href="/scrum" target="_blank">empirical
    process control is a scrum principle</a>), but also inspecting, adapting, and improving the Scrum Team&rsquo;s capabilities.</p>
  <a name="indexa"></a>
  <p><strong>Focus on Seven Key Areas to Improve Your Scrum </strong><strong>P</strong><strong>r</strong><strong>a</strong><strong>c</strong><strong>t</strong><strong>ice</strong></p>
  <p>To help you and your teams improve, we have broken the problem down into seven key improvements:</p>
  <p><b><a name="indexaa"></a><a href="#top">TOP</a></b></p>
  <p><b>INDEX</b></p>
  <ol>
    <li><a href="#1a">An agile mindset</a> </li>
    <li><a href="#2a">Empiricism</a> </li>
    <li><a href="#3a">Teamwork</a></li>
    <li><a href="#4a">Team process</a> </li>
    <li><a href="#5a">Team identity</a> </li>
    <li><a href="#6a">Product value</a> </li>
    <li><a href="#7a">Organization</a></li>
  </ol>
  <p><strong>1.&nbsp; <a href="#indexa" name="1a">An Agile Mindset</a></strong></p>
  <p>An agile mindset is essential to improving the attitudes and outlooks held by the members of a Scrum Team, shaping how they interpret the world and how they work with each other and the world at large. When we talk about an agile mindset, we include the Scrum values,&nbsp;the values and principles from the <em><a href="/agile?slide=12" target="_blank">Manifesto for Agile Software Development</a></em>,&nbsp;and Lean Principles. These values and principles guide the decisions that a Scrum Team makes, and they directly affect the effectiveness of that team in collaborating while using an
    empirical process to deliver valuable <a href="/productincrement" target="_blank">Product Increments</a>.</p>
  <p>Delivering value in a complex world means that there are few rules and no "best practices" that a team can apply.&nbsp; Instead, team members are guided by an agile mindset to make decisions based on the best data available to them.</p>
  <p><strong>2.&nbsp; <a href="#indexa" name="2a">Empiricism Is at the Heart of Scrum!</a></strong></p>
  <p>Scrum is designed to enable empiricism. Embracing empiricism improves transparency, inspection, and adaptation. Understanding these three pillars of any empirical process is essential for a Scrum Team to improve its ability to deliver valuable Product Increments.&nbsp; <br>
    (Remember in Traditional Project Management loads of documentation and
    planning is used to &quot;define the way forward.&quot;&nbsp; In Agile (Scrum) this is
    minimized.&nbsp; Therefore Empiricism is crucial to minimize <a href="/pmway/?slide=12" target="_blank">risk</a>!)</p>
  <p><strong>T</strong><strong>r</strong><strong>a</strong><strong>n</strong><strong>s</strong><strong>p</strong><strong>a</strong><strong>re</strong><strong>n</strong><strong>c</strong><strong>y </strong>means that the Scrum Team has a full understanding of what&rsquo;s going on; all aspects of the process that affect outcomes are visible to them. Transparency helps them understand which features and functions are planned for the product, how the Scrum Team is progressing toward its goals, and what value customers receive when they use the product.</p>
  <p><strong>I</strong><strong>n</strong><strong>s</strong><strong>p</strong><strong>ec</strong><strong>t</strong><strong>i</strong><strong>o</strong><strong>n </strong>means that the Scrum Team is able, at frequent intervals, to observe results and learn from new information. Team members actively seek information about both achievements and shortfalls from desired outcomes and goals.</p>
  <p><strong>A</strong><strong>d</strong><strong>a</strong><strong>p</strong><strong>t</strong><strong>a</strong><strong>t</strong><strong>i</strong><strong>o</strong><strong>n </strong>means that the Scrum Team, at frequent intervals, uses information obtained from inspection to change its strategy, plans, techniques, and behaviors to realign them with the desired outcomes and goals.</p>
  <p>The Scrum Framework provides a set of lightweight rules that help a Scrum Team to achieve a minimal level of empiricism:</p>
  <ul>
    <li>Time-boxes help a Scrum Team create empirical feedback loops.</li>
    <li>By producing a "<a href="/donedone" target="_blank">Done</a>" Increment at least once during a Sprint, a Scrum Team enables transparency that allows them to validate their assumptions about value.</li>
  </ul>
  <p>To truly maximize the benefits of Scrum, Scrum Teams must increase the breadth (quantity) and depth (quality) of their empiricism. For example:</p>
  <ul>
    <li>By increasing transparency into how they do their work, they are able to identify improvements in their processes, tools, and interactions.</li>
    <li>By increasing transparency into the value that customers realize from using the product, they gain deeper insights into how they can improve the product.</li>
    <li>By increasing their frequency of collaboration during the day, beyond just the Daily Scrum, they can identify and resolve issues sooner, thereby improving their flow of work.</li>
    <li>By collaborating with the Product Owner as the work is being done, they can increase the speed with which they are able to improve the product.</li>
  </ul>
  <p><strong>3.&nbsp; <a href="#indexa" name="3a">Mastering Scrum Means Improving Teamwork</a></strong></p>
  <p>To make empiricism work, Scrum Teams need to collaborate to deliver valuable solutions to complex problems, then measure the results, and subsequently adapt based on feedback. <br>
    <br>
    An effective Scrum Team is:</p>
  <ul>
    <li><em>C</em><em>r</em><em>o</em><em>ss</em><em>-</em><em>f</em><em>un</em><em>cti</em><em>ona</em><em>l</em><em>. </em>A cross-functional team has all of the skills needed to accomplish the goal. This reduces the risk caused by dependencies outside the team, including potential waste from partially done work. "Cross-functional" does not mean that every person needs to be able to perform every activity. Instead, a team must figure out the combination of skills and how to spread the skills among the team to reduce waste, improve innovation and quality, and adapt to changing needs.</li>
    <li><em>S</em><em>el</em><em>f</em><em>-o</em><em>r</em><em>gan</em><em>i</em><em>z</em><em>i</em><em>ng</em><em>. </em>A self-organizing team determines what it can accomplish and how team members will work together to accomplish it. To ensure accountability, the first step is for a team to feel ownership of the work. Members need to be trusted as the experts and allowed to experiment, try new things, and change direction&mdash;all in the service of value delivery.</li>
    <li><em>Co</em><em>ll</em><em>abo</em><em>r</em><em>a</em><em>tive</em><em>. </em>To harness the power of collective intelligence, a self-organizing, cross-functional team must break down silos to gain the benefits of collaboration. Working in silos makes it challenging to innovate or even to simply deliver something of value to a customer quickly. <strong><br>
      Handoffs must be eliminated at all cost as these create gaps in understanding, delays, and other waste!</strong></li>
    <li><em>S</em><em>t</em><em>ab</em><em>le</em><em>. </em>A self-organizing, cross-functional, collaborative team is more than a collection of individuals; it is an entirely new entity made up of <a href="/pmway/?slide=14" target="_blank" title="CMM People is a People / Team improvement Capability Maturity model">people</a> who themselves are wonderfully complex creatures. It takes time and conscious effort to bring a group of individuals together to form a cohesive team that is able to continuously evolve in terms of who it is and how it works. Without stability, the team never completely forms, and its sponsoring organization never truly reaps the benefits of a high-performing team. This does not mean that team composition should never change, only that when it does it will take time and conscious effort to help the individuals work as a team again.</li>
  </ul>
  <h5 align="center">PMWay suggests this video below is an example of Awesome Teamwork!</h5>
  <p align="center"> <img alt="" class="img-fluid" src="/images/team.png"><img alt="" class="img-fluid" src="/images/teampullingtogether.png"></p>
  <p align="center"><i>Click the image below to open another tab on your browser to view the video</i></p>
  <p align="center"><a href="/home/team" target="_blank"><img alt="" class="img-fluid" title="" src="/images/walkofftheearth.jpg"></a></p>
  <br>
  <div align="center">
    <button class="btn btn-primary align-center clearfix" type="button" data-toggle=
"collapse" data-target="#collapseteamatcml1" aria-expanded="false" aria-controls=
        "collapseteamatcml1">Example of a TEAM <br>
    not working together well </button>
    <div class="collapse" id="collapseteamatcml1">
      <div class="container">
        <div class="card text-center">
          <h5 class="card-header" align="center">TEAM operating @ Capability Maturity Level 1</h5>
          <div class="card-body text-center">
            <p align="center">An example of a team not working together!<br>
              <img alt="" class="img-fluid" src="/images/
teamwork_teamwork_a.png
"></p>
          </div>
          <div class="card-footer"> </div>
        </div>
      </div>
    </div>
  </div>
  <br>
  <br>
  <p><strong>4.&nbsp;<a href="#indexa" name="4a">To Improve, Teams Must Hone Their Team Processes</a></strong></p>
  <p>The Scrum Team defines its way of working within <em>guard rails </em>established by the Scrum Framework&mdash;that is, the boundaries and guidance established by role accountabilities, event goals, and artifact purposes. How the Scrum Team fulfills the roles, uses the artifacts, and conducts the events is left up to them. How they create the Product Increment and ensure quality is also left up to them.</p>
  <p>The Team Process dimension includes practices, tools, and ways of working together. It touches on a wide variety of areas, including the following:</p>
  <ul>
    <li>Engineering practices and tools</li>
    <li>Quality practices and tools</li>
    <li>Product (and <a href="/scrum" target="_blank">Project</a>) management processes, practices and tools</li>
    <li>Product Backlog management practices and tools Effective use of Scrum events and artifacts Effective communication and collaboration Identification and removal of sources of waste Identification and removal of impediments</li>
    <li>Effective use and growth of <ahref="/pmway/?slide=14" target="_blank" title="People CMM can be used here to measure Team Capability and Maturity">team knowledge, skills, and capabilities</a> for Scrum
      specifically and in general&nbsp; <br>
      (To illustrate:&nbsp; How
      many members of the scrum team actually have scrum certification?  What about certification for the software development areas they work in?)</li>
  </ul>
  <p>The practices and tools that a team uses will be influenced by the product type, its technology platform, the environment in which the product is used, the users of the product and how they use it, regulatory and legal conditions, market trends, changing needs of the business, and so forth. <br>
    That&rsquo;s a lot of stuff! Moreover, much of that stuff changes over time.</p>
  <p>As a result, Scrum Teams must remain vigilant in inspecting and adapting what they are doing, why they are doing it, how they are doing it, and what benefits they are getting from doing it. New practices and tools are continuously being created and shared in product development communities around the world, so it is important to stay connected and keep learning. In fact, teams may need to invent new practices and tools to meet their unique challenges and needs.</p>
  <p><strong>5.&nbsp;<a href="#indexa" name="5a">Every Strong Team has a Distinct Team Identity</a></strong></p>
  <p>A team starts as a collection of individuals. Together they form an entirely new living and breathing organism. This new organism forms an identity over time. Just as a child grows up and becomes a teenager and then a young adult, a team must constantly seek to discover and evolve its identity.</p>
  <p>At a fundamental level, establishing identity is about answering three big questions that guide a team on its journey toward high performance:</p>
  <ol>
    <li>Why do we exist? (Purpose)</li>
    <li>What is important to us? (Values)</li>
    <li>What do we want? (Vision)</li>
  </ol>
  <p><strong>6.&nbsp; <a href="#indexa" name="6a">Every Scrum Team Must Focus on Improving the Value That Its Product Delivers</a></strong></p>
  <p>The purpose of a Scrum Team is to deliver a series of valuable Product Increments. To deliver value, a Scrum Team must:</p>
  <ul>
    <li>Understand the motivations, behaviors, and needs (both stated and latent) of users and customers.</li>
    <li>Align the product&rsquo;s vision, its strategy, and the mission and objectives of the organization.</li>
    <li>Measure the actual value delivered.</li>
    <li>Essentially, Scrum enables a team to deliver a lot of stuff, frequently. <br>
      However, if the team isn&rsquo;t optimizing the value of the Product, it will achieve very little.</li>
  </ul>
  <p><strong>7.&nbsp; <a href="#indexa" name="7a">The Organization Can Greatly Influence the Team&rsquo;s Performance</a></strong></p>
  <p>Organizations provide both structure and culture. Both of these facets impact the teams and products that live within the organization, in either positive ways or negative ways.</p>
  <p>Structure includes the business model, which is essentially the design for successfully operating the business. This includes the mission, the strategy, products, and services, as well as how they relate to revenue sources, a customer base, and financing. Structure also includes how employees, partners, and service providers are organized. <br>
    It often influences organizational processes and policies.</p>
  <p>Culture is a body of habits that bind people together into a cohesive unit. Culture is a way of seeing things, of knowing what to do in specific circumstances. It evolves from the sum of all human behavior within an organization. It is often influenced by the organizational structure and processes, including roles, goals, and incentives.</p>
  <p>The success of Scrum Teams is greatly influenced by organizational structure and culture. Maximizing the benefits of Scrum often means evolving organizational culture, processes, and possibly structure. Although you may not have to tackle these things immediately, usually Scrum Teams eventually start running into impediments that are outside of their control. They may be able to work around those impediments for a time, but this means they will reach a plateau.</p>
  <a name="indexb"></a>
  <p><strong>Growing Scrum Requires a Team to Improve Other Capabilities</strong></p>
  <p>Scrum Teams need a number of capabilities to help them to continuously improve and to adapt to change. By "capability," we mean the ability to apply knowledge, skills, and experience to solve problems. Specifically, Scrum Teams must have knowledge (e.g., theory, techniques, domains), the ability to apply that knowledge skillfully to obtain desired results, and experience to build those skills as well as to guide intuition and foresight.</p>
  <p>Scrum Teams need different capabilities depending on the kind of product they are developing and the constraints of the organization in which they work. The kinds of capabilities they need can be organized into five categories:</p>
  <p><b><a name="indexaa"></a><a href="#top">TOP</a></b></p>
  <p><b>INDEX</b></p>
  <ol>
    <li><a href="#1b">Teaching skills </a> </li>
    <li><a href="#2b">Facilitation skills</a> </li>
    <li><a href="#3b">Coaching skills</a> </li>
    <li><a href="#4b">Technical excellence</a> </li>
    <li><a href="#5b">Servant leadership</a></li>
  </ol>
  <p>People within the Scrum Team must have these capabilities and continue to grow these capabilities so as to be successful in the dimensions that enable Professional Scrum.</p>
  <p><strong>1.&nbsp; <a href="#indexb" name="1b">Teaching Skills</a></strong></p>
  <p>Teaching is instructing others in an effort to give them new knowledge and skills. Often, Scrum Masters employ their teaching skills to help team members understand the Scrum Framework and its underlying values and principles. Scrum Teams will likely need to be introduced to techniques that can help them move forward with Scrum and become more effective with Scrum.</p>
  <p>The skills and knowledge that a Scrum Team needs to continuously improve and tackle new challenges will change over time. Scrum Masters recognize what the Scrum Team needs based on its growth as a team and the current context to help the team get to the next level needed. This may be professional training, short exercises and knowledge sharing, a refresher course, a situational teaching moment, or a combination of all of these.</p>
  <p>Of course, it is not always the Scrum Master who needs to teach the team. Product Owners may teach Development Teams about the product market, customer needs, and business value. Development Team members may teach each other about quality practices, testing approaches, and tools.</p>
  <p>Teaching does not simply mean telling people things; that is, teaching is not a lecture. People learn much more effectively by doing and discovering. They learn by relating to what they already know. They also learn when the new knowledge and skills have an emotional impact.</p>
  <p>Teaching is not something everyone can do. Some people may have an innate teaching ability, but ultimately teaching is a capability that people can develop and grow. Luckily, you do not have to be at the level of a professional teacher to employ and develop this capability.</p>
  <p><strong>2.&nbsp; <a href="#indexb" name="2b">Facilitation Skills</a></strong></p>
  <p>Facilitators guide groups by using a neutral perspective to help them come to their own solutions and make decisions. The facilitator provides a group with enough structure to enable the members to engage in positive collaboration to achieve productive progress in meetings and conversations. The word "facile" is French for "easy" or "simple"; thus, a facilitator is trying to make things easier for a group of people to work together.</p>
  <p>Facilitation skills can help improve every Scrum event. In addition, facilitation can help improve other working sessions as well as ad hoc conversations that occur when teams are doing complex work together.</p>
  <p>The extent of facilitation can range from light to extensive, depending on the needs of the group. Wherever a meeting or conversation falls on this range, ensure there is enough structure to meet the following aims:</p>
  <ul>
    <li>Stay on target with their purpose or goals.</li>
    <li>Create an environment that promotes rich discussion and collaboration.</li>
    <li>Clarify the group&rsquo;s decisions, key outcomes, and next steps.</li>
  </ul>
  <p>Any team member can help the team by facilitating. <a href="/homeviewpdf/resources/scrumguide.pdf" target="_blank">The Scrum Guide</a> does not require the Scrum Master to facilitate all of the events; instead, facilitation is a skill that can and should be grown across a Scrum Team. Facilitation skills also help team members guide their own informal conversations and working sessions with each other to be more focused, creative, and productive.</p>
  <p><strong>3.&nbsp; <a href="#indexb" name="3b">Coaching Skills</a></strong></p>
  <p><em>Coa</em><em>c</em><em>h</em><em>i</em><em>n</em><em>g enhances </em><em>a person&rsquo;s ability to learn, make changes, and achieve desired goals. It is a thought-provoking and creative process that enables people to make conscious decisions and empowers them to become leaders in their own lives</em>.</p>
  <p>Our view is that coaching is <em>not </em>the same as advising or consulting. The key difference is that the person being coached is the one taking the lead. With advising, the person being advised is not learning and discovering based on his or her own experiences and desires, but rather receives advice based on someone else&rsquo;s experience and desires. "Consulting" is a broad and loosely used term, but it typically involves doing the work (versus helping others discover solutions) and advising people how to do the work.</p>
  <p>Coaching skills help Scrum Teams grow because they help the team members improve their accountability and ability to self-organize. They also help the team become more resilient when faced with complexity, new challenges, and constant change.</p>
  <p><strong>4.&nbsp; <a href="#indexb" name="4b">Technical Excellence</a></strong></p>
  <p>Technical excellence means excellence in the choice and application of techniques; it is not just about the technology. Scrum doesn&rsquo;t tell you how to be an excellent Development Team, nor does it tell you how to be an excellent Product Owner. The approaches, skills, and tools you will need in each role are completely dependent on the context in which you are working. Although Scrum doesn&rsquo;t define what sort of things you will need to exhibit technical excellence, doing Scrum well absolutely requires that you demonstrate technical excellence. Technical excellence encompasses many things: from engineering practices to programming languages, from product management practices to quality assurance, from mechanical engineering to user experience design, and much more.</p>
  <p>Because technology and business are changing so rapidly, along with other environmental changes that impact product possibilities, any attempt to define exactly what is needed to deliver with technical excellence would become outdated immediately. Furthermore, products are becoming much more than just software. As a result, Scrum Teams need to constantly refine and evolve what technical excellence means to them as business and technology needs change.</p>
  <p><strong>5.&nbsp; <a href="#indexb" name="5b">Servant Leadership</a></strong></p>
  <p>The Scrum Guide describes the Scrum Master as a servant-leader and provides examples of ways that the Scrum Master serves the Product Owner, the Development Team, and the organization. Scrum Masters are accountable servant-leaders, which means a Scrum Master&rsquo;s success is determined by the success of his or her Scrum Team. A Scrum Master helps everyone grow their capabilities, effectively navigate limitations and challenges, and embrace empiricism to deliver, on a frequent cadence, valuable products in a complex and unpredictable world.</p>
  <p>However, there is an artful complexity to fulfilling the accountability of the Scrum Master role. When success depends on the actions of others, it is easy to want to direct them and step in when things appear to be going off-course. Yet such intervention can undermine self-organization and their feeling of accountability. This is where the capabilities of servant leadership guide a Scrum Master.</p>
  <p>Here are examples of behaviors of accountable Scrum Masters:</p>
  <ul>
    <li>They create an environment of safety, encouraging productive debate to ensure people feel heard and respected, thereby helping teams reach better decisions and own those decisions.</li>
    <li>They facilitate consensus, helping teams clarify decisions and responsibilities to increase focus and create shared understanding.</li>
    <li>They refrain from solving problems and aim to increase transparency, which empowers teams and helps them to better self-organize, taking ownership of their process, decisions, and outcomes.</li>
    <li>They are comfortable with failure and ambiguity. When team decisions do not lead to the anticipated outcome, they help the team learn and grow and gain confidence in using an empirical approach that maximizes learning and controls risk.</li>
    <li>They care for people, meeting them where they are and helping them find their next step for growth, but are not afraid to challenge people when they are capable of more.</li>
    <li>They show low tolerance for organizational impediments and fiercely advocate for the team to remove obstacles that are preventing the team from achieving better results.</li>
  </ul>
  <p>These behaviors contribute to higher engagement, faster feedback, and better outcomes for the product. When managers of Scrum Teams and other leaders in the organization act as accountable servant-leaders, they support the growth of both Scrum Teams and agility across the wider organization.</p>
  <p><strong>A Process for Continuous </strong><strong>I</strong><strong>m</strong><strong>p</strong><strong>r</strong><strong>ov</strong><strong>e</strong><strong>m</strong><strong>e</strong><strong>n</strong><strong>t</strong></p>
  	<p><u>A</u><u>pp</u><u>e</u><u>nd</u><u>i</u><u>x A</u> "<u>A Self-Assessment for Understanding Where You Are&quot;</u> (<a href="https://pmway.hopto.org/scrumviewpdf/resources/masteringprofessionalscrum2019.pdf" target="_blank"> from Annexures in Mastering Professional Scrum 2019</a> OR <a href="https://pmway.hopto.org/homesave/resources/masteringprofessionalscrumwherearewemisconceptions2019.pdf" target="_blank">Just the Self Assessment and Misconceptions about Scrum.  I.e. only the last 2 Annexures from Mastering Professional Scrum 2019</a>), presents a set of self-assessment questions. If you take the time with your team members to complete this assessment, it will bring additional perspectives and insights. The assessment is meant to help you identify areas where you can improve as a team; it is not meant to pass judgment on you for doing things wrong. Ideally, this tool will prompt your entire Scrum Team to look objectively at where you are and where you want to be, as a starting point for your team&rsquo;s improvement.</p>
  <p>After you have completed the self-assessment, look for questions where you scored yourself as 7 or lower. Especially look at questions where you scored yourself as 5 or lower.</p>
  <p>The list of areas where you feel you need to improve may feel overwhelming, but as we said earlier, transparency is essential to improving the results that you will get by using Scrum. The way you start improving anything complex is to ask yourself three questions:</p>
  <ol>
    <li>What hurts the most?&nbsp; </li>
    <li>Why?</li>
    <li>What are small experiments we can run that will deliver the most value?</li>
  </ol>
  <p><strong>W</strong><strong>h</strong><strong>a</strong><strong>t Hurts the </strong><strong>M</strong><strong>o</strong><strong>s</strong><strong>t</strong><strong>?</strong></p>
  <p>You can&rsquo;t fix everything at once. Your energy and focus will become diluted when you try to change too many things simultaneously, making it difficult to achieve anything meaningful for any one thing. When people in the organization don&rsquo;t see quick benefits, they tend to lose interest and withdraw their support, and the new habits may not be given the chance to take hold. Spreading yourself across too many things also makes it difficult to measure the impacts of each change or to know which changes are having the desired impacts.</p>
  <p>Instead, incrementally implement changes continuously over time, making adjustments as you learn more&mdash;in other words, improve empirically! Sometimes the changes will be small, and sometimes the changes must be big. It all depends on what is broken. The best place to start is usually where it hurts the most.</p>
  <hr>
  <a name="indexc"></a>
  <p><b><a name="mistakes"></a>In Practice: Seven Common Scrum Dysfunctions:</b></p>
  <p>In our experience, seven common mistakes prevent teams and organizations from fully enabling business agility with Professional Scrum. These mistakes can happen even with the best of intentions.</p>
  <p><b><a name="indexaa"></a><a href="#top">TOP</a></b></p>
  <p><b>INDEX</b></p>
  <ol>
    <li><a href="#1c">Undone Scrum</a></li>
    <li><a href="#2c">Mechanical (or Zombie) Scrum</a></li>
    <li><a href="#3c">Dogmatic Scrum</a></li>
    <li><a href="#4c">One-Size-Fits-All Scrum</a></li>
    <li><a href="#5c">Water-Scrum-Fall</a></li>
    <li><a href="#6c">Good Enough Scrum</a></li>
    <li><a href="#7c">Snowflake Scrum</a></li>
  </ol>
  <ol>
    <a name="undone"></a>
    <li><a href="/scrumrca#indexc" name="1c"><strong>Undone Scrum.</strong></a><br>
      In our experience with a wide variety of teams, we have found that the biggest pain point for Scrum Teams is not being able to create a "<a href="/donedone" target="_blank">Done</a>" Product Increment by the end of a Sprint. <br>
      Scrum Teams that don&rsquo;t produce a "<a href="/donedone" target="_blank">Done</a>" Increment can&rsquo;t inspect and adapt and are not really getting any benefit from using Scrum. This can lead to "zombie" Scrum, or water-Scrum-fall, or several of the other dysfunctions listed
      in points 2 to 7 below.
      <p align="center"><i>Hover your mouse over the image</i></p>
      <p align="center"> <img alt="" class="img-fluid" class="img-fluid" title="It aint done till its done done!" id="heart"  src="/images/doneandundone.jpg" onmouseover="this.src='/images/undonescrum.jpg'" onmouseout="this.src='/images/doneandundone.jpg'" ></p>
    </li>
  </ol>
  <ol start="2">
    <a name="zombie"></a>
    <li><a href="/scrumrca#indexc" name="2c"><strong>Mechanical (or Zombie) Scrum.</strong></a><br>
      This problem involves simply going through the motions without the spirit of continuous improvement and without understanding or caring about the underlying values and principles. This is "checking the box" to say you are doing it, but there&rsquo;s no beating heart.<br>
      <p align="center"><img alt="zombie scrum" class="img-fluid" id="target"  src="/images/zombiescrum.jpg"><br>
        <br>
      <p align="center"><img alt="" class="img-fluid" src="/images/codered.jpg"><br>
        <img alt=""  src="/images/defib.png"><br>
        <img alt="" id="zapper" src="/images/defibpaddles.png"></p>
      <p align="center"> <img alt="" class="img-fluid" height="82" width="60" title="Shocked to see a pulse!? Now kill Mechanical (Zombie) Scrum by dragging your beating passionate heart into the fight!" id="heart" src="/images/notbeatingheart.png" onmouseover="this.src='/images/beatingheart.gif'" onmouseout="this.src='/images/notbeatingheart.png'" ></p>
    </li>
  </ol>
  <ol start="3">
    <a name="dogmatic"></a>
    <li><a href="/scrumrca#indexc" name="3c"><strong>Dogmatic Scrum</strong></a>.<br>
      This issue may happen when an "expert" tells the Scrum Team the
      &quot;best practices&quot; based on his or her own experience. <em>There are no best practices with Scrum. </em> The assertion that teams must follow certain &quot;best practices&quot; discourages self-organization and ultimately limits agility. Scrum is meant to be a framework for opportunistic discovery.<br>
      The reason Scrum is so lightweight is because specific&nbsp;practices and techniques are not universal. Product delivery is complex and unpredictable, and it requires creative exploration by self-organizing teams. The best practice is the practice that works for your product and your team in the current moment. And it likely won&rsquo;t be a best practice for your product and your team six months from now.
      <div align="center"><img alt="" class="img-fluid" src="/images/drill.jpg"></div>
    </li>
  </ol>
  <ol start="4">
    <a name="onesize"></a>
    <li><a href="/scrumrca#indexc" name="4c"><strong>One-Size-Fits-All Scrum</strong></a>.<br>
      In one-size-fits-all Scrum, an organization wants to standardize and create a Scrum "methodology" for all Scrum Teams in the organization. This problem, which is often combined with dogmatic Scrum, sometimes emerges more because of a (misplaced) feeling of control and predictability, rather than out of a sense of creating true value for the organization. It may represent an attempt to ensure all previous activities and documents are" covered."&nbsp; In Scrum, the activities are not what matter; the outcomes are what matter. We need to be open to new ways of working to meet the real needs. Scrum is a process framework, and teams need to figure out their own process within the boundaries of Scrum.
      <p align="center"><img alt="" class="img-fluid" src="/images/onesizefitsall.jpg"></p>
    </li>
  </ol>
  <ol start="5">
    <a name="waterscrumfall"></a>
    <li><a href="/scrumrca#indexc" name="5c"><strong>Water-Scrum-Fall</strong></a>.<br>
      This problem comes in two flavors. In the first version, a Scrum Team is operating in a series of Sprints but essentially still doing a waterfall process within the Sprint, with silos of knowledge and skills and multiple handoffs. This often results in not having a "<a href="/donedone" target="_blank">Done</a>" Increment by the end of the Sprint.&nbsp; In the second manifestation, a Scrum Team does its "development" work in a Sprint, but there are up-front requirements and design cycles and later testing cycles. This is not really Scrum at all, because there is no intention of producing a releasable Increment at the end of every Sprint.
      <p align="center"><i>Hover your mouse over the image</i></p>
      <p align="center"> <img alt="" class="img-fluid" src="/images/water_scrum_fall.jpg" onmouseover="this.src='/images/waterscrumfalllarger.png'" onmouseout="this.src='/images//water_scrum_fall.jpg'"></p>
    </li>
  </ol>
  <ol start="6">
    <a name="goodenough"></a>
    <li><a href="/scrumrca#indexc" name="6c"><strong>Good Enough Scrum</strong></a>.<br>
      With this problem, the Scrum Team gets some efficiency benefits by regularly planning and looking at the state of the product, but it tolerates the organizational impediments and current limitations, assuming "that&rsquo;s the way things have always been done." Team members don&rsquo;t challenge themselves to improve technical and engineering practices to have a "<a href="/donedone" target="_blank">Done</a>" Increment every Sprint.
      <p align="center"> <img alt="undone scrum" class="img-fluid" src="/images/culturecuffed.png"></p>
    </li>
  </ol>
  <ol start="7">
    <a name="snowflake"></a>
    <li><a href="/scrumrca#indexc" name="7c"><strong>Snowflake Scrum</strong></a>.<br>
      This situation happens when a team or organization thinks it is "unique," so it has to adapt Scrum to fit its needs. <em>You either do Scrum </em><em>or you don&rsquo;t do Scrum. </em>Modifying Scrum does not fix the problems. Modifying Scrum will likely hide your problems &hellip; for a little while. When the problems are hidden, it may feel better, but those problems are still there. Ultimately, they will manifest as a lack of business agility and dysfunction.
      <p align="center"><img alt="" class="img-fluid" src="/images/snowflakescrum.png"></p>
      <p align="center"><img alt="" class="img-fluid" src="/images/watersplashblack.png"></p>
    </li>
  </ol>
  <hr>
  <a name="rca"></a>
  <p><b><a name="indexaa"></a><a href="#top">TOP</a></b></p>
  <p><strong>Root Cause Analysis</strong></p>
  <p>The question "why" is about getting down to the root cause. The <em>5 Whys </em>is a technique used to determine the root cause of a problem by repeating the question "Why."<br>
    The "5" in the name of this technique comes from observation that typically five iterations of asking the question are needed to get to the root of the problem, although the actual number may be either fewer or more.</p>
  <p><strong>In Practice: Using the "5 Whys" to Diagnose Root Causes</strong></p>
  <p>To illustrate using the 5 Whys, consider the following problem: "<b>Releases are constantly delayed, frustrating customers and other stakeholders.</b>"</p>
  <p>The first question you could ask is "Why are releases constantly delayed?" Your answer might be "Because we didn&rsquo;t deliver a &lsquo;<a href="/donedone" target="_blank">Done</a>&rsquo; <a href="/productincrement" target="_blank">Product Increment</a>, so our work has to continue into the next Sprint."</p>
  <p>In response, your second question would likely be "Why didn&rsquo;t you deliver a &lsquo;<a href="/donedone" target="_blank">Done</a>&rsquo; <a href="/productincrement" target="_blank">Product Increment</a>?" Your answer might be "Product Backlog items are always larger and more difficult than we think, and we don&rsquo;t usually discover this until late in the Sprint."</p>
  <p>Based on your experience you may already have thought of some possible root causes: </p>
  <ul>
    <li>The work is too big. (Team Process)</li>
    <li>The work is not well enough understood. (Team Process, Product Value)</li>
    <li>How the team gets things to "<a href="/donedone" target="_blank">Done</a>" is not transparent or not effective. (Empiricism, Teamwork, Team Process)</li>
    <li>Progress is not transparent. (Empiricism, Team Process)</li>
    <li>Team members may be afraid to bring up issues and risks. (Teamwork, Team Identity)</li>
  </ul>
  <p>You can now form better questions to start digging deeper into the root causes. Your third question might be "How much transparency is there to the progress of work on a daily basis?" The answer might be "We have a Daily Scrum and look at the Scrum Board. Team members report the status for the cards they are working on. Most cards take a few days, sometimes more than a week, to get done. So it&rsquo;s toward the end of a Sprint that people start reporting that they are at risk of not finishing. By then, of course, the testers don&rsquo;t have enough time."</p>
  <p>Based on our experience, possible root causes include the following issues:</p>
  <ul>
    <li>Not understanding the purpose of the Daily Scrum and poor facilitation of the Daily Scrum (Empiricism, Teamwork, Team Process)</li>
    <li>Lack of shared purpose among the Development Team and not holding each other accountable (Teamwork, Team Identity)</li>
    <li>Silos in knowledge and skills that prevent collaboration and getting items completed earlier in the Sprint (Teamwork, Team Identity, Team Process)</li>
  </ul>
  <p>Given the answers provided, ask the following kinds of questions to refine your understanding:</p>
  <ul>
    <li>How much transparency is there to the progress of work on a daily basis? </li>
    <li>Why do team members work on different things?</li>
    <li>How does the Scrum Team adapt when it discovers that there is not enough time to finish everything?</li>
  </ul>
  <p>There are many ways this example conversation could unfold, and in practice it will take longer and require more questions to find the root causes of the problem. Major pain points are often complex and have multiple root causes. Consequently, you will have to prioritize which paths you go down first. You will start to see themes or patterns develop. Look for the root causes that are foundational, meaning they will prevent progress in solving other issues essential to the effectiveness of Scrum.</p>
  <p>Scrum Teams can use this technique in Sprint Retrospectives to help them understand why they are experiencing a particular problem (Figure 1-1).</p>
  <p align="center"> <img alt=""class="img-fluid" src="/images/rca.jpg" ></p>
  <p align="center"><strong>Fi</strong><strong>g</strong><strong>u</strong><strong>r</strong><strong>e 1-1 </strong>A sample output from a root cause analysis</p>
  <p>A figure representing the root cause analysis report of a team is shown. The three major pain points are no "<a href="/donedone" target="_blank">Done</a>" increment, low product value, and releases and customer feedback delayed. They are related to each other as follows: no "<a href="/donedone" target="_blank">Done</a>" increment leads to releases and customer feedback delayed, which in turn leads to low product value. The possible causes for each pain point are shown. The possible causes that affect no "<a href="/donedone" target="_blank">Done</a>" Increment directly are, knowledge/skill silos, poor/unclear DoD, and external dependency. The possible causes that have an indirect effect are: lack of team ownership and accountability which is a result of knowledge/skill silos, scrum team not understanding scrum, and work being forced into sprint and not understood well, which is a result of PO not empowered to make decisions. The possible causes that affect low product value directly are: quality issues impacting customers, and PO focusing on PBI details only. The possible causes that affect the low product value indirectly are: poor or unclear DoD leading to progress not being transparent which further leads to quality issues impacting customers.</p>
  <p>In Figure 1-1, a Scrum Team&rsquo;s three major pain points are circled, and each possible cause is shown as contributing to one or more of the pain points. Now that they have visualized the problems and root causes, the Scrum Team can make better-informed decisions about where to start to fix the most critical issues. Although there is no magic formula to address all possible root causes, an iterative and incremental approach will allow the team to discover the best options for them at this point of time. Improving incrementally is done by employing <a href="/empirical" target="_blank">empiricism</a>. By discussing challenges and their possible root causes, you have created transparency and enabled inspection of that transparent information.</p>
  <p><strong>E</strong><strong>x</strong><strong>p</strong><strong>er</strong><strong>i</strong><strong>m</strong><strong>e</strong><strong>n</strong><strong>t with Different </strong><strong>A</strong><strong>pp</strong><strong>r</strong><strong>oa</strong><strong>c</strong><strong>h</strong><strong>e</strong><strong>s</strong></p>
  <p>Complex problems don&rsquo;t have simple or obvious solutions. Before you make a major investment in a particular solution, make sure that you understand the problem and have a viable solution for fixing it. Regardless of the data, intuition, and experience you have, there will always be some things that you don&rsquo;t know.&nbsp; To move forward without being paralyzed by these unknowns, you can try some experiments to see what might work or to gather more information.&nbsp; Sounds very in alignment with navigating complexity and unpredictability, eh?</p>
  <p>To effectively use experiments to improve, follow these steps:</p>
  <ol>
    <li>Identify the problem you are trying to solve. You&rsquo;ve probably got some ideas about this from your root cause analysis.</li>
    <li>Create a hypothesis about some action that you think you can take to improve.</li>
    <li>Decide what you will do to test this hypothesis.</li>
    <li>Run the experiment.</li>
    <li>Analyze the results. This includes comparing actual results against expectations, reflecting on learning, and getting feedback.</li>
    <li>Refine and repeat. This may include modifying the hypothesis or the experiment. When you design the experiment, be clear about the following points:</li>
  </ol>
  <ul>
    <li>What are you trying to learn?&nbsp; </li>
    <li>How will you measure success?&nbsp; </li>
    <li>How soon can you get feedback?</li>
  </ul>
  <p>When you design the experiment, you also want to consider the potential return on investment (ROI) of the experiment. Ideally, the experiment should be reasonably small, so you can minimize the investment and get feedback sooner. The experiment should also provide sufficient value. The low-hanging fruit may be fast and easy to pick, but you may get less return from it. The higher-value things may take more investment, time, and energy.</p>
  <p>There is no one right answer. You have to consider your team&rsquo;s unique pain points and unique needs. You have to get creative about breaking down the big stuff into smaller experiments of higher value. By doing so, you can improve iteratively and incrementally.</p>
  <p>Now you know where you are&mdash;and you know where you want to be. As you start identifying experiments to run in an effort to move closer to where you want to be, create an improvement backlog. Order these items and begin.</p>
  <p>In the same way that Scrum uses an empirical approach to solve complex problems and deliver valuable products, you can use an empirical approach to solve complex problems and maximize the benefits of Scrum. You can do this at the Scrum Team level and at other levels of the organization beyond the Scrum Team. For an individual Scrum Team, this cycle of continuous improvement is already built into the cadence of a Sprint and the use of a Sprint Retrospective to inspect and adapt as a Scrum Team. In addition, it is up to each Scrum Team to determine the amount of time that needs to be devoted to improvement each Sprint and how to organize and validate the improvements made each Sprint.</p>
  <p><strong>Su</strong><strong>cce</strong><strong>s</strong><strong>s </strong><strong>o</strong><strong>r Failure?</strong></p>
  <p>Is it possible for a success to be a failure? Is it possible for a failure to be a success? You may have noticed that many of the Business Agility assessment questions in
    Appendix A deal with outcomes (e.g., value, quick delivery). Although outcomes are most important, behaviors can also be important when they help build a team&rsquo;s capabilities.</p>
  <p>You cannot control all of the variables in complex work and the unpredictable environmental conditions around you. If you could, then you would plan everything out in advance, follow that plan, and obtain guaranteed results. In the messy real world, however, you may do all the "right things" and still not get the desired outcomes. This is why it is important to look at behaviors as well.</p>
  <p>As you analyze the results of your experiments or improvement steps, consider both outcomes and behaviors, especially their trends over time. For example, consider the situation in which a Development Team uncovers major technical challenges with a new integration. The Development Team started this work on the first day of the Sprint because team members knew it would be more challenging and had previously learned the hard way that they should tackle the riskier items sooner. They swarmed. They informed the Product Owner of the situation and worked together to break the work down smaller. Ultimately, though, they didn&rsquo;t get to "<a href="/donedone" target="_blank">Done</a>."</p>
  <p>In this example, there is a clear failure: The team does not have a "<a href="/donedone" target="_blank">Done</a>" Increment. Yet there is also a success: The team applied learning from their previous experience and did the best they could with what they knew at the time. They collaborated, negotiated, and adapted throughout the Sprint. The key is to find new learning to do even better next time. Perhaps the team will decide to adjust how they do Product Backlog refinement to break items down in a different way. Maybe they will identify a skill gap to address. Maybe they will decide to change their development practices or tools.</p>
  <p>Ultimately, there are two questions to ask:</p>
  <ul>
    <li>Did we do the best we could with what we knew at the time? </li>
    <li>How can we do better?</li>
  </ul>
  <p><strong>Su</strong><strong>mm</strong><strong>a</strong><strong>r</strong><strong>y</strong></p>
  <p>The seven key improvement areas we focus on&mdash;an agile mindset, empiricism, teamwork, team process, team identity, product value, and organization&mdash;provide a lens through which you can inspect your team&rsquo;s ability to achieve its goals and find ways to improve.</p>
  <p>By looking for underlying root causes, running experiments to try to improve, and then inspecting and adapting, you can gradually, consistently, and continuously improve your ability to achieve better results.</p>
  <p>The seven key areas also provide a lens through which you can observe outcomes and behaviors. You can look for underlying root causes, peeling the onion. This lens creates focus and clarity so that you can reflect and take intentional action.</p>
  <p>You improve empiricism by employing empiricism. You must create transparency about the desired outcomes of the improvements and regularly inspect and adapt your way toward maximizing the benefits of Scrum.</p>
  <p><strong>C</strong><strong>a</strong><strong>ll to </strong><strong>A</strong><strong>c</strong><strong>t</strong><strong>ion</strong></p>
  <p>Review your notes from your self-assessment questions and ratings and consider the following points:</p>
  <p>What do you notice about the data? What trends do you see?</p>
  <p>What new insights did you gain from this assessment?</p>
  <p>Using what we have discussed in this chapter for guidance, hold a collaborative discussion with your Scrum Team to take the following steps:</p>
  <ol>
    <li>Identify the top two or three pain points.</li>
  </ol>
  <ol start="2">
    <li>For each one, identify possible root causes.</li>
  </ol>
  <ol start="3">
    <li>Choose two or three root causes to address.</li>
  </ol>
  <ol start="4">
    <li>Create an ordered list of the first improvements you want to implement. For each of these "experiments," be sure to clarify expected outcomes and how you will measure results.</li>
  </ol>
  <ol start="5">
    <li>Begin.</li>
  </ol>
  <p><a href="/homesave/resources/improvingscrum.pdf" >To download a pdf of this page click here</a></p>
  <p><a href="/homesave/resources/masteringprofessionalscrumassessment.pdf">To download the assessment click here</a></p>
  <p>PMWay thanks: <i>Mastering Professional Scrum 2019</i>.  This is truly awesome work y'all! </p>
  <br>
  <br>
  <br>
  <script src="/bootstrapfouroneone/jquery/jquery.js"></script>
  <script src="/bootstrapfouroneone/jqueryui/jquery-ui.js"></script>
  <link rel="stylesheet" href="/bootstrapfouroneone/jqueryui/jquery-ui.css">
  <script>
  $(document).ready(function () {
    $("#heart, #zapper").draggable({revert:"invalid"});
    $("#target").droppable({
      greddy: true,
      tolerance: 'touch',
      drop: function (event, ui) {

                    ui.draggable.draggable('option', 'revert', 'true');
					 alert("Awesome! You've Got It!  You kill Mechanical (Zombie) Scrum with Heart!  Understanding and Applying the information on this page will make your Heart strong!");



      }
    });




  });




</script>
</div>
{% endif %}


{% if not user %}

<!--
<link rel="stylesheet" href="/bootstrapfourthreeone/css/bootstrap.css" />



	<link rel="stylesheet" href="/bootstrapfourthreeone/fontawesomeprowebfivetwo/css/all.css">
	<link rel="stylesheet" href="/bootstrapfourthreeone/css/jquery-ui.css">
	<link rel="stylesheet" href="/css/styles.css"> -->

<div class="container" align="left">
  <h3>Improving For Professional Scrum</h3>
  <hr>
  <p><strong>Find Out How To Continuously Improve Your Scrum Practice</strong></p>
  <div class="d-flex ">
    <div class="p-2 flex-fill"><a name="top"></a>
      <ol>
        <li><a href="#indexa">Seven Key Improvement Areas to Improve Scrum Practice</a></li>
        <li><a href="#indexb">Five Other Capability Improvement Areas</a></li>
        <li><a href="#indexc">Seven Types of Scrum Dysfunction</a></li>
        <li><a href="#rca">Root Cause Analysis</a></li>
      </ol>
    </div>
    <div class="p-5 flex-fill">
      <hr>
      <p align="left"><strong>Note:</strong> PMWay suggests that any Scrum team wishing to improve
        their &quot;<a href="/gamestats" target="_blank">game stats</a>&quot; (to become Professional Practitioners of Scrum), should focus their effort 100% on the advice found below: To GET IT, to DO IT a.s.a.p!</p>
      <hr>
    </div>
  </div>
  <hr>
  <p>Scrum is a lightweight framework that helps teams create valuable <a href="/release" target="_blank">releasable</a> <a href="/productincrement" target="_blank">products</a> frequently.&nbsp; <br>
    The rules that exist for Scrum practice are important to ensure transparency, to enable effective inspecting and adapting, to reduce waste, and to enable business agility.<br>
    <br>
    The Scrum Value Model below shows the Vision, Product Roadmap, Release
    Plan and Products Released areas.&nbsp; Often these &quot;squeaky wheels,&quot; if given
    oil, will really help the team to &quot;up their game stats.&quot; Achieving
    improvement in these core areas, sprint by sprint, is not easy to
    get right.&nbsp; However, PMWay asserts that focusing improvements here (<b>as soon
    as possible!</b>)
    will be what ultimately sorts the poorly
    run scrum
    team from the great scrum team!&nbsp; <br>
    Why don't you read below and see if you agree with the assertion?</p>
  <!-- <p align="center"><img alt="Scrum Value Model" class="img-fluid" src="/images/scrumvaluedessence.jpg"></p>-->
 <!--scrumvaluemodelessence.jpg  with pmway.hopto.org link-->
 <p align="center"><img alt="Scrum Value Model" class="img-fluid" src="/images/scrumvaluemodelessence.jpg">
  <p>No matter how experienced, every team can improve its ability to inspect and adapt to deliver valuable Product Increments. Customers are continually evolving, and their needs are constantly changing. Competitors are continually evolving and adapting as well. Likewise, technologies are constantly changing, enabling new capabilities while also creating new challenges to overcome. New team members bring new skills and insights but may change the dynamics of the team. Meeting these challenges means not only mastering the delivery of great products by using <a href="/empirical" target="_blank">empiricism</a> (<a href="/scrum" target="_blank">empirical
    process control is a scrum principle</a>), but also inspecting, adapting, and improving the Scrum Team&rsquo;s capabilities.</p>
  <a name="indexa"></a>
  <p><strong>Focus on Seven Key Areas to Improve Your Scrum </strong><strong>P</strong><strong>r</strong><strong>a</strong><strong>c</strong><strong>t</strong><strong>ice</strong></p>
  <p>To help you and your teams improve, we have broken the problem down into seven key improvements:</p>
  <p><b><a name="indexaa"></a><a href="#top">TOP</a></b></p>
  <p><b>INDEX</b></p>
  <ol>
    <li><a href="#1a">An agile mindset</a> </li>
    <li><a href="#2a">Empiricism</a> </li>
    <li><a href="#3a">Teamwork</a></li>
    <li><a href="#4a">Team process</a> </li>
    <li><a href="#5a">Team identity</a> </li>
    <li><a href="#6a">Product value</a> </li>
    <li><a href="#7a">Organization</a></li>
  </ol>
  <p><strong>1.&nbsp; <a href="#indexa" name="1a">An Agile Mindset</a></strong></p>
  <p>An agile mindset is essential to improving the attitudes and outlooks held by the members of a Scrum Team, shaping how they interpret the world and how they work with each other and the world at large. When we talk about an agile mindset, we include the Scrum values,&nbsp;the values and principles from the <em><a href="/agile?slide=12" target="_blank">Manifesto for Agile Software Development</a></em>,&nbsp;and Lean Principles. These values and principles guide the decisions that a Scrum Team makes, and they directly affect the effectiveness of that team in collaborating while using an
    empirical process to deliver valuable <a href="/productincrement" target="_blank">Product Increments</a>.</p>
  <p>Delivering value in a complex world means that there are few rules and no "best practices" that a team can apply.&nbsp; Instead, team members are guided by an agile mindset to make decisions based on the best data available to them.</p>
  <p><strong>2.&nbsp; <a href="#indexa" name="2a">Empiricism Is at the Heart of Scrum!</a></strong></p>
  <p>Scrum is designed to enable empiricism. Embracing empiricism improves transparency, inspection, and adaptation. Understanding these three pillars of any empirical process is essential for a Scrum Team to improve its ability to deliver valuable Product Increments.&nbsp; <br>
    (Remember in Traditional Project Management loads of documentation and
    planning is used to &quot;define the way forward.&quot;&nbsp; In Agile (Scrum) this is
    minimized.&nbsp; Therefore Empiricism is crucial to minimize <a href="/pmway/?slide=12" target="_blank">risk</a>!)</p>
  <p><strong>T</strong><strong>r</strong><strong>a</strong><strong>n</strong><strong>s</strong><strong>p</strong><strong>a</strong><strong>re</strong><strong>n</strong><strong>c</strong><strong>y </strong>means that the Scrum Team has a full understanding of what&rsquo;s going on; all aspects of the process that affect outcomes are visible to them. Transparency helps them understand which features and functions are planned for the product, how the Scrum Team is progressing toward its goals, and what value customers receive when they use the product.</p>
  <p><strong>I</strong><strong>n</strong><strong>s</strong><strong>p</strong><strong>ec</strong><strong>t</strong><strong>i</strong><strong>o</strong><strong>n </strong>means that the Scrum Team is able, at frequent intervals, to observe results and learn from new information. Team members actively seek information about both achievements and shortfalls from desired outcomes and goals.</p>
  <p><strong>A</strong><strong>d</strong><strong>a</strong><strong>p</strong><strong>t</strong><strong>a</strong><strong>t</strong><strong>i</strong><strong>o</strong><strong>n </strong>means that the Scrum Team, at frequent intervals, uses information obtained from inspection to change its strategy, plans, techniques, and behaviors to realign them with the desired outcomes and goals.</p>
  <p>The Scrum Framework provides a set of lightweight rules that help a Scrum Team to achieve a minimal level of empiricism:</p>
  <ul>
    <li>Time-boxes help a Scrum Team create empirical feedback loops.</li>
    <li>By producing a "<a href="/donedone" target="_blank">Done</a>" Increment at least once during a Sprint, a Scrum Team enables transparency that allows them to validate their assumptions about value.</li>
  </ul>
  <p>To truly maximize the benefits of Scrum, Scrum Teams must increase the breadth (quantity) and depth (quality) of their empiricism. For example:</p>
  <ul>
    <li>By increasing transparency into how they do their work, they are able to identify improvements in their processes, tools, and interactions.</li>
    <li>By increasing transparency into the value that customers realize from using the product, they gain deeper insights into how they can improve the product.</li>
    <li>By increasing their frequency of collaboration during the day, beyond just the Daily Scrum, they can identify and resolve issues sooner, thereby improving their flow of work.</li>
    <li>By collaborating with the Product Owner as the work is being done, they can increase the speed with which they are able to improve the product.</li>
  </ul>
  <p><strong>3.&nbsp; <a href="#indexa" name="3a">Mastering Scrum Means Improving Teamwork</a></strong></p>
  <p>To make empiricism work, Scrum Teams need to collaborate to deliver valuable solutions to complex problems, then measure the results, and subsequently adapt based on feedback. <br>
    <br>
    An effective Scrum Team is:</p>
  <ul>
    <li><em>C</em><em>r</em><em>o</em><em>ss</em><em>-</em><em>f</em><em>un</em><em>cti</em><em>ona</em><em>l</em><em>. </em>A cross-functional team has all of the skills needed to accomplish the goal. This reduces the risk caused by dependencies outside the team, including potential waste from partially done work. "Cross-functional" does not mean that every person needs to be able to perform every activity. Instead, a team must figure out the combination of skills and how to spread the skills among the team to reduce waste, improve innovation and quality, and adapt to changing needs.</li>
    <li><em>S</em><em>el</em><em>f</em><em>-o</em><em>r</em><em>gan</em><em>i</em><em>z</em><em>i</em><em>ng</em><em>. </em>A self-organizing team determines what it can accomplish and how team members will work together to accomplish it. To ensure accountability, the first step is for a team to feel ownership of the work. Members need to be trusted as the experts and allowed to experiment, try new things, and change direction&mdash;all in the service of value delivery.</li>
    <li><em>Co</em><em>ll</em><em>abo</em><em>r</em><em>a</em><em>tive</em><em>. </em>To harness the power of collective intelligence, a self-organizing, cross-functional team must break down silos to gain the benefits of collaboration. Working in silos makes it challenging to innovate or even to simply deliver something of value to a customer quickly. <strong><br>
      Handoffs must be eliminated at all cost as these create gaps in understanding, delays, and other waste!</strong></li>
    <li><em>S</em><em>t</em><em>ab</em><em>le</em><em>. </em>A self-organizing, cross-functional, collaborative team is more than a collection of individuals; it is an entirely new entity made up of <a href="/pmway/?slide=14" target="_blank" title="CMM People is a People / Team improvement Capability Maturity model">people</a> who themselves are wonderfully complex creatures. It takes time and conscious effort to bring a group of individuals together to form a cohesive team that is able to continuously evolve in terms of who it is and how it works. Without stability, the team never completely forms, and its sponsoring organization never truly reaps the benefits of a high-performing team. This does not mean that team composition should never change, only that when it does it will take time and conscious effort to help the individuals work as a team again.</li>
  </ul>
  <h5 align="center">PMWay suggests this video below is an example of Awesome Teamwork!</h5>
  <p align="center"> <img alt="" class="img-fluid" src="/images/team.png"><img alt="" class="img-fluid" src="/images/teampullingtogether.png"></p>
  <p align="center"><i>Click the image below to open another tab on your browser to view the video</i></p>
  <p align="center"><a href="/home/team" target="_blank"><img alt="" class="img-fluid" title="" src="/images/walkofftheearth.jpg"></a></p>
  <br>
  <div align="center">
    <button class="btn btn-primary align-center clearfix" type="button" data-toggle=
"collapse" data-target="#collapseteamatcml1" aria-expanded="false" aria-controls=
        "collapseteamatcml1">Example of a TEAM <br>
    not working together well </button>
    <div class="collapse" id="collapseteamatcml1">
      <div class="container">
        <div class="card text-center">
          <h5 class="card-header" align="center">TEAM operating @ Capability Maturity Level 1</h5>
          <div class="card-body text-center">
            <p align="center">An example of a team not working together!<br>
              <img alt="" class="img-fluid" src="/images/
teamwork_teamwork_a.png
"></p>
          </div>
          <div class="card-footer"> </div>
        </div>
      </div>
    </div>
  </div>
  <br>
  <br>
  <p><strong>4.&nbsp;<a href="#indexa" name="4a">To Improve, Teams Must Hone Their Team Processes</a></strong></p>
  <p>The Scrum Team defines its way of working within <em>guard rails </em>established by the Scrum Framework&mdash;that is, the boundaries and guidance established by role accountabilities, event goals, and artifact purposes. How the Scrum Team fulfills the roles, uses the artifacts, and conducts the events is left up to them. How they create the Product Increment and ensure quality is also left up to them.</p>
  <p>The Team Process dimension includes practices, tools, and ways of working together. It touches on a wide variety of areas, including the following:</p>
  <ul>
    <li>Engineering practices and tools</li>
    <li>Quality practices and tools</li>
    <li>Product (and <a href="/scrum" target="_blank">Project</a>) management processes, practices and tools</li>
    <li>Product Backlog management practices and tools Effective use of Scrum events and artifacts Effective communication and collaboration Identification and removal of sources of waste Identification and removal of impediments</li>
    <li>Effective use and growth of <ahref="/pmway/?slide=14" target="_blank" title="People CMM can be used here to measure Team Capability and Maturity">team knowledge, skills, and capabilities</a> for Scrum
      specifically and in general&nbsp; <br>
      (To illustrate:&nbsp; How
      many members of the scrum team actually have scrum certification?  What about certification for the software development areas they work in?)</li>
  </ul>
  <p>The practices and tools that a team uses will be influenced by the product type, its technology platform, the environment in which the product is used, the users of the product and how they use it, regulatory and legal conditions, market trends, changing needs of the business, and so forth. <br>
    That&rsquo;s a lot of stuff! Moreover, much of that stuff changes over time.</p>
  <p>As a result, Scrum Teams must remain vigilant in inspecting and adapting what they are doing, why they are doing it, how they are doing it, and what benefits they are getting from doing it. New practices and tools are continuously being created and shared in product development communities around the world, so it is important to stay connected and keep learning. In fact, teams may need to invent new practices and tools to meet their unique challenges and needs.</p>
  <p><strong>5.&nbsp;<a href="#indexa" name="5a">Every Strong Team has a Distinct Team Identity</a></strong></p>
  <p>A team starts as a collection of individuals. Together they form an entirely new living and breathing organism. This new organism forms an identity over time. Just as a child grows up and becomes a teenager and then a young adult, a team must constantly seek to discover and evolve its identity.</p>
  <p>At a fundamental level, establishing identity is about answering three big questions that guide a team on its journey toward high performance:</p>
  <ol>
    <li>Why do we exist? (Purpose)</li>
    <li>What is important to us? (Values)</li>
    <li>What do we want? (Vision)</li>
  </ol>
  <p><strong>6.&nbsp; <a href="#indexa" name="6a">Every Scrum Team Must Focus on Improving the Value That Its Product Delivers</a></strong></p>
  <p>The purpose of a Scrum Team is to deliver a series of valuable Product Increments. To deliver value, a Scrum Team must:</p>
  <ul>
    <li>Understand the motivations, behaviors, and needs (both stated and latent) of users and customers.</li>
    <li>Align the product&rsquo;s vision, its strategy, and the mission and objectives of the organization.</li>
    <li>Measure the actual value delivered.</li>
    <li>Essentially, Scrum enables a team to deliver a lot of stuff, frequently. <br>
      However, if the team isn&rsquo;t optimizing the value of the Product, it will achieve very little.</li>
  </ul>
  <p><strong>7.&nbsp; <a href="#indexa" name="7a">The Organization Can Greatly Influence the Team&rsquo;s Performance</a></strong></p>
  <p>Organizations provide both structure and culture. Both of these facets impact the teams and products that live within the organization, in either positive ways or negative ways.</p>
  <p>Structure includes the business model, which is essentially the design for successfully operating the business. This includes the mission, the strategy, products, and services, as well as how they relate to revenue sources, a customer base, and financing. Structure also includes how employees, partners, and service providers are organized. <br>
    It often influences organizational processes and policies.</p>
  <p>Culture is a body of habits that bind people together into a cohesive unit. Culture is a way of seeing things, of knowing what to do in specific circumstances. It evolves from the sum of all human behavior within an organization. It is often influenced by the organizational structure and processes, including roles, goals, and incentives.</p>
  <p>The success of Scrum Teams is greatly influenced by organizational structure and culture. Maximizing the benefits of Scrum often means evolving organizational culture, processes, and possibly structure. Although you may not have to tackle these things immediately, usually Scrum Teams eventually start running into impediments that are outside of their control. They may be able to work around those impediments for a time, but this means they will reach a plateau.</p>
  <a name="indexb"></a>
  <p><strong>Growing Scrum Requires a Team to Improve Other Capabilities</strong></p>
  <p>Scrum Teams need a number of capabilities to help them to continuously improve and to adapt to change. By "capability," we mean the ability to apply knowledge, skills, and experience to solve problems. Specifically, Scrum Teams must have knowledge (e.g., theory, techniques, domains), the ability to apply that knowledge skillfully to obtain desired results, and experience to build those skills as well as to guide intuition and foresight.</p>
  <p>Scrum Teams need different capabilities depending on the kind of product they are developing and the constraints of the organization in which they work. The kinds of capabilities they need can be organized into five categories:</p>
  <p><b><a name="indexaa"></a><a href="#top">TOP</a></b></p>
  <p><b>INDEX</b></p>
  <ol>
    <li><a href="#1b">Teaching skills </a> </li>
    <li><a href="#2b">Facilitation skills</a> </li>
    <li><a href="#3b">Coaching skills</a> </li>
    <li><a href="#4b">Technical excellence</a> </li>
    <li><a href="#5b">Servant leadership</a></li>
  </ol>
  <p>People within the Scrum Team must have these capabilities and continue to grow these capabilities so as to be successful in the dimensions that enable Professional Scrum.</p>
  <p><strong>1.&nbsp; <a href="#indexb" name="1b">Teaching Skills</a></strong></p>
  <p>Teaching is instructing others in an effort to give them new knowledge and skills. Often, Scrum Masters employ their teaching skills to help team members understand the Scrum Framework and its underlying values and principles. Scrum Teams will likely need to be introduced to techniques that can help them move forward with Scrum and become more effective with Scrum.</p>
  <p>The skills and knowledge that a Scrum Team needs to continuously improve and tackle new challenges will change over time. Scrum Masters recognize what the Scrum Team needs based on its growth as a team and the current context to help the team get to the next level needed. This may be professional training, short exercises and knowledge sharing, a refresher course, a situational teaching moment, or a combination of all of these.</p>
  <p>Of course, it is not always the Scrum Master who needs to teach the team. Product Owners may teach Development Teams about the product market, customer needs, and business value. Development Team members may teach each other about quality practices, testing approaches, and tools.</p>
  <p>Teaching does not simply mean telling people things; that is, teaching is not a lecture. People learn much more effectively by doing and discovering. They learn by relating to what they already know. They also learn when the new knowledge and skills have an emotional impact.</p>
  <p>Teaching is not something everyone can do. Some people may have an innate teaching ability, but ultimately teaching is a capability that people can develop and grow. Luckily, you do not have to be at the level of a professional teacher to employ and develop this capability.</p>
  <p><strong>2.&nbsp; <a href="#indexb" name="2b">Facilitation Skills</a></strong></p>
  <p>Facilitators guide groups by using a neutral perspective to help them come to their own solutions and make decisions. The facilitator provides a group with enough structure to enable the members to engage in positive collaboration to achieve productive progress in meetings and conversations. The word "facile" is French for "easy" or "simple"; thus, a facilitator is trying to make things easier for a group of people to work together.</p>
  <p>Facilitation skills can help improve every Scrum event. In addition, facilitation can help improve other working sessions as well as ad hoc conversations that occur when teams are doing complex work together.</p>
  <p>The extent of facilitation can range from light to extensive, depending on the needs of the group. Wherever a meeting or conversation falls on this range, ensure there is enough structure to meet the following aims:</p>
  <ul>
    <li>Stay on target with their purpose or goals.</li>
    <li>Create an environment that promotes rich discussion and collaboration.</li>
    <li>Clarify the group&rsquo;s decisions, key outcomes, and next steps.</li>
  </ul>
  <p>Any team member can help the team by facilitating. <a href="/homeviewpdf/resources/scrumguide.pdf" target="_blank">The Scrum Guide</a> does not require the Scrum Master to facilitate all of the events; instead, facilitation is a skill that can and should be grown across a Scrum Team. Facilitation skills also help team members guide their own informal conversations and working sessions with each other to be more focused, creative, and productive.</p>
  <p><strong>3.&nbsp; <a href="#indexb" name="3b">Coaching Skills</a></strong></p>
  <p><em>Coa</em><em>c</em><em>h</em><em>i</em><em>n</em><em>g enhances </em><em>a person&rsquo;s ability to learn, make changes, and achieve desired goals. It is a thought-provoking and creative process that enables people to make conscious decisions and empowers them to become leaders in their own lives</em>.</p>
  <p>Our view is that coaching is <em>not </em>the same as advising or consulting. The key difference is that the person being coached is the one taking the lead. With advising, the person being advised is not learning and discovering based on his or her own experiences and desires, but rather receives advice based on someone else&rsquo;s experience and desires. "Consulting" is a broad and loosely used term, but it typically involves doing the work (versus helping others discover solutions) and advising people how to do the work.</p>
  <p>Coaching skills help Scrum Teams grow because they help the team members improve their accountability and ability to self-organize. They also help the team become more resilient when faced with complexity, new challenges, and constant change.</p>
  <p><strong>4.&nbsp; <a href="#indexb" name="4b">Technical Excellence</a></strong></p>
  <p>Technical excellence means excellence in the choice and application of techniques; it is not just about the technology. Scrum doesn&rsquo;t tell you how to be an excellent Development Team, nor does it tell you how to be an excellent Product Owner. The approaches, skills, and tools you will need in each role are completely dependent on the context in which you are working. Although Scrum doesn&rsquo;t define what sort of things you will need to exhibit technical excellence, doing Scrum well absolutely requires that you demonstrate technical excellence. Technical excellence encompasses many things: from engineering practices to programming languages, from product management practices to quality assurance, from mechanical engineering to user experience design, and much more.</p>
  <p>Because technology and business are changing so rapidly, along with other environmental changes that impact product possibilities, any attempt to define exactly what is needed to deliver with technical excellence would become outdated immediately. Furthermore, products are becoming much more than just software. As a result, Scrum Teams need to constantly refine and evolve what technical excellence means to them as business and technology needs change.</p>
  <p><strong>5.&nbsp; <a href="#indexb" name="5b">Servant Leadership</a></strong></p>
  <p>The Scrum Guide describes the Scrum Master as a servant-leader and provides examples of ways that the Scrum Master serves the Product Owner, the Development Team, and the organization. Scrum Masters are accountable servant-leaders, which means a Scrum Master&rsquo;s success is determined by the success of his or her Scrum Team. A Scrum Master helps everyone grow their capabilities, effectively navigate limitations and challenges, and embrace empiricism to deliver, on a frequent cadence, valuable products in a complex and unpredictable world.</p>
  <p>However, there is an artful complexity to fulfilling the accountability of the Scrum Master role. When success depends on the actions of others, it is easy to want to direct them and step in when things appear to be going off-course. Yet such intervention can undermine self-organization and their feeling of accountability. This is where the capabilities of servant leadership guide a Scrum Master.</p>
  <p>Here are examples of behaviors of accountable Scrum Masters:</p>
  <ul>
    <li>They create an environment of safety, encouraging productive debate to ensure people feel heard and respected, thereby helping teams reach better decisions and own those decisions.</li>
    <li>They facilitate consensus, helping teams clarify decisions and responsibilities to increase focus and create shared understanding.</li>
    <li>They refrain from solving problems and aim to increase transparency, which empowers teams and helps them to better self-organize, taking ownership of their process, decisions, and outcomes.</li>
    <li>They are comfortable with failure and ambiguity. When team decisions do not lead to the anticipated outcome, they help the team learn and grow and gain confidence in using an empirical approach that maximizes learning and controls risk.</li>
    <li>They care for people, meeting them where they are and helping them find their next step for growth, but are not afraid to challenge people when they are capable of more.</li>
    <li>They show low tolerance for organizational impediments and fiercely advocate for the team to remove obstacles that are preventing the team from achieving better results.</li>
  </ul>
  <p>These behaviors contribute to higher engagement, faster feedback, and better outcomes for the product. When managers of Scrum Teams and other leaders in the organization act as accountable servant-leaders, they support the growth of both Scrum Teams and agility across the wider organization.</p>
  <p><strong>A Process for Continuous </strong><strong>I</strong><strong>m</strong><strong>p</strong><strong>r</strong><strong>ov</strong><strong>e</strong><strong>m</strong><strong>e</strong><strong>n</strong><strong>t</strong></p>


	<p><u>A</u><u>pp</u><u>e</u><u>nd</u><u>i</u><u>x A</u> "<u>A Self-Assessment for Understanding Where You Are&quot;</u> (<a href="https://pmway.hopto.org/scrumviewpdf/resources/masteringprofessionalscrum2019.pdf" target="_blank"> from Annexures in Mastering Professional Scrum 2019</a> OR <a href="https://pmway.hopto.org/homesave/resources/masteringprofessionalscrumwherearewemisconceptions2019.pdf" target="_blank">Just the Self Assessment and Misconceptions about Scrum.  I.e. only the last 2 Annexures from Mastering Professional Scrum 2019</a>), presents a set of self-assessment questions. If you take the time with your team members to complete this assessment, it will bring additional perspectives and insights. The assessment is meant to help you identify areas where you can improve as a team; it is not meant to pass judgment on you for doing things wrong. Ideally, this tool will prompt your entire Scrum Team to look objectively at where you are and where you want to be, as a starting point for your team&rsquo;s improvement.</p>


  <p>After you have completed the self-assessment, look for questions where you scored yourself as 7 or lower. Especially look at questions where you scored yourself as 5 or lower.</p>
  <p>The list of areas where you feel you need to improve may feel overwhelming, but as we said earlier, transparency is essential to improving the results that you will get by using Scrum. The way you start improving anything complex is to ask yourself three questions:</p>
  <ol>
    <li>What hurts the most?&nbsp; </li>
    <li>Why?</li>
    <li>What are small experiments we can run that will deliver the most value?</li>
  </ol>
  <p><strong>W</strong><strong>h</strong><strong>a</strong><strong>t Hurts the </strong><strong>M</strong><strong>o</strong><strong>s</strong><strong>t</strong><strong>?</strong></p>
  <p>You can&rsquo;t fix everything at once. Your energy and focus will become diluted when you try to change too many things simultaneously, making it difficult to achieve anything meaningful for any one thing. When people in the organization don&rsquo;t see quick benefits, they tend to lose interest and withdraw their support, and the new habits may not be given the chance to take hold. Spreading yourself across too many things also makes it difficult to measure the impacts of each change or to know which changes are having the desired impacts.</p>
  <p>Instead, incrementally implement changes continuously over time, making adjustments as you learn more&mdash;in other words, improve empirically! Sometimes the changes will be small, and sometimes the changes must be big. It all depends on what is broken. The best place to start is usually where it hurts the most.</p>
  <hr>
  <a name="indexc"></a>
  <p><b><a name="mistakes"></a>In Practice: Seven Common Scrum Dysfunctions:</b></p>
  <p>In our experience, seven common mistakes prevent teams and organizations from fully enabling business agility with Professional Scrum. These mistakes can happen even with the best of intentions.</p>
  <p><b><a name="indexaa"></a><a href="#top">TOP</a></b></p>
  <p><b>INDEX</b></p>
  <ol>
    <li><a href="#1c">Undone Scrum</a></li>
    <li><a href="#2c">Mechanical (or Zombie) Scrum</a></li>
    <li><a href="#3c">Dogmatic Scrum</a></li>
    <li><a href="#4c">One-Size-Fits-All Scrum</a></li>
    <li><a href="#5c">Water-Scrum-Fall</a></li>
    <li><a href="#6c">Good Enough Scrum</a></li>
    <li><a href="#7c">Snowflake Scrum</a></li>
  </ol>
  <ol>
    <a name="undone"></a>
    <li><a href="/scrumrca#indexc" name="1c"><strong>Undone Scrum.</strong></a><br>
      In our experience with a wide variety of teams, we have found that the biggest pain point for Scrum Teams is not being able to create a "<a href="/donedone" target="_blank">Done</a>" Product Increment by the end of a Sprint. <br>
      Scrum Teams that don&rsquo;t produce a "<a href="/donedone" target="_blank">Done</a>" Increment can&rsquo;t inspect and adapt and are not really getting any benefit from using Scrum. This can lead to "zombie" Scrum, or water-Scrum-fall, or several of the other dysfunctions listed
      in points 2 - 7 below.
      <p align="center"><i>Hover your mouse over the image</i></p>
      <p align="center"> <img alt="" class="img-fluid" class="img-fluid" title="It aint done till its done done!" id="heart"  src="/images/doneandundone.jpg" onmouseover="this.src='/images/undonescrum.jpg'" onmouseout="this.src='/images/doneandundone.jpg'" ></p>
    </li>
  </ol>
  <ol start="2">
    <a name="zombie"></a>
    <li><a href="/scrumrca#indexc" name="2c"><strong>Mechanical (or Zombie) Scrum.</strong></a><br>
      This problem involves simply going through the motions without the spirit of continuous improvement and without understanding or caring about the underlying values and principles. This is "checking the box" to say you are doing it, but there&rsquo;s no beating heart.<br>
      <p align="center"><img alt="zombie scrum" class="img-fluid" id="target"  src="/images/zombiescrum.jpg"><br>
        <br>
      <p align="center"><img alt="" class="img-fluid" src="/images/codered.jpg"><br>
        <img alt=""  src="/images/defib.png"><br>
        <img alt="" id="zapper" src="/images/defibpaddles.png"></p>
      <p align="center"> <img alt="" class="img-fluid" height="82" width="60" title="Shocked to see a pulse!? Now kill Mechanical (Zombie) Scrum by dragging your beating passionate heart into the fight!" id="heart" src="/images/notbeatingheart.png" onmouseover="this.src='/images/beatingheart.gif'" onmouseout="this.src='/images/notbeatingheart.png'" ></p>
    </li>
  </ol>
  <ol start="3">
    <a name="dogmatic"></a>
    <li><a href="/scrumrca#indexc" name="3c"><strong>Dogmatic Scrum</strong></a>.<br>
      This issue may happen when an "expert" tells the Scrum Team the
      &quot;best practices&quot; based on his or her own experience. <em>There are no best practices with Scrum. </em> The assertion that teams must follow certain &quot;best practices&quot; discourages self-organization and ultimately limits agility. Scrum is meant to be a framework for opportunistic discovery.<br>
      The reason Scrum is so lightweight is because specific&nbsp;practices and techniques are not universal. Product delivery is complex and unpredictable, and it requires creative exploration by self-organizing teams. The best practice is the practice that works for your product and your team in the current moment. And it likely won&rsquo;t be a best practice for your product and your team six months from now.
      <div align="center"><img alt="" class="img-fluid" src="/images/drill.jpg"></div>
    </li>
  </ol>
  <ol start="4">
    <a name="onesize"></a>
    <li><a href="/scrumrca#indexc" name="4c"><strong>One-Size-Fits-All Scrum</strong></a>.<br>
      In one-size-fits-all Scrum, an organization wants to standardize and create a Scrum "methodology" for all Scrum Teams in the organization. This problem, which is often combined with dogmatic Scrum, sometimes emerges more because of a (misplaced) feeling of control and predictability, rather than out of a sense of creating true value for the organization. It may represent an attempt to ensure all previous activities and documents are" covered."&nbsp; In Scrum, the activities are not what matter; the outcomes are what matter. We need to be open to new ways of working to meet the real needs. Scrum is a process framework, and teams need to figure out their own process within the boundaries of Scrum.
      <p align="center"><img alt="" class="img-fluid" src="/images/onesizefitsall.jpg"></p>
    </li>
  </ol>
  <ol start="5">
    <a name="waterscrumfall"></a>
    <li><a href="/scrumrca#indexc" name="5c"><strong>Water-Scrum-Fall</strong></a>.<br>
      This problem comes in two flavors. In the first version, a Scrum Team is operating in a series of Sprints but essentially still doing a waterfall process within the Sprint, with silos of knowledge and skills and multiple handoffs. This often results in not having a "<a href="/donedone" target="_blank">Done</a>" Increment by the end of the Sprint.&nbsp; In the second manifestation, a Scrum Team does its "development" work in a Sprint, but there are up-front requirements and design cycles and later testing cycles. This is not really Scrum at all, because there is no intention of producing a releasable Increment at the end of every Sprint.
      <p align="center"><i>Hover your mouse over the image</i></p>
      <p align="center"> <img alt="" class="img-fluid" src="/images/water_scrum_fall.jpg" onmouseover="this.src='/images/waterscrumfalllarger.png'" onmouseout="this.src='/images//water_scrum_fall.jpg'"></p>
    </li>
  </ol>
  <ol start="6">
    <a name="goodenough"></a>
    <li><a href="/scrumrca#indexc" name="6c"><strong>Good Enough Scrum</strong></a>.<br>
      With this problem, the Scrum Team gets some efficiency benefits by regularly planning and looking at the state of the product, but it tolerates the organizational impediments and current limitations, assuming "that&rsquo;s the way things have always been done." Team members don&rsquo;t challenge themselves to improve technical and engineering practices to have a "<a href="/donedone" target="_blank">Done</a>" Increment every Sprint.
      <p align="center"> <img alt="undone scrum" class="img-fluid" src="/images/culturecuffed.png"></p>
    </li>
  </ol>
  <ol start="7">
    <a name="snowflake"></a>
    <li><a href="/scrumrca#indexc" name="7c"><strong>Snowflake Scrum</strong></a>.<br>
      This situation happens when a team or organization thinks it is "unique," so it has to adapt Scrum to fit its needs. <em>You either do Scrum </em><em>or you don&rsquo;t do Scrum. </em>Modifying Scrum does not fix the problems. Modifying Scrum will likely hide your problems &hellip; for a little while. When the problems are hidden, it may feel better, but those problems are still there. Ultimately, they will manifest as a lack of business agility and dysfunction.
      <p align="center"><img alt="" class="img-fluid" src="/images/snowflakescrum.png"></p>
      <p align="center"><img alt="" class="img-fluid" src="/images/watersplashblack.png"></p>
    </li>
  </ol>
  <hr>
  <a name="rca"></a>
  <p><b><a name="indexaa"></a><a href="#top">TOP</a></b></p>
  <p><strong>Root Cause Analysis</strong></p>
  <p>The question "why" is about getting down to the root cause. The <em>5 Whys </em>is a technique used to determine the root cause of a problem by repeating the question "Why."<br>
    The "5" in the name of this technique comes from observation that typically five iterations of asking the question are needed to get to the root of the problem, although the actual number may be either fewer or more.</p>
  <p><strong>In Practice: Using the "5 Whys" to Diagnose Root Causes</strong></p>
  <p>To illustrate using the 5 Whys, consider the following problem: "<b>Releases are constantly delayed, frustrating customers and other stakeholders.</b>"</p>
  <p>The first question you could ask is "Why are releases constantly delayed?" Your answer might be "Because we didn&rsquo;t deliver a &lsquo;<a href="/donedone" target="_blank">Done</a>&rsquo; <a href="/productincrement" target="_blank">Product Increment</a>, so our work has to continue into the next Sprint."</p>
  <p>In response, your second question would likely be "Why didn&rsquo;t you deliver a &lsquo;<a href="/donedone" target="_blank">Done</a>&rsquo; <a href="/productincrement" target="_blank">Product Increment</a>?" Your answer might be "Product Backlog items are always larger and more difficult than we think, and we don&rsquo;t usually discover this until late in the Sprint."</p>
  <p>Based on your experience you may already have thought of some possible root causes: </p>
  <ul>
    <li>The work is too big. (Team Process)</li>
    <li>The work is not well enough understood. (Team Process, Product Value)</li>
    <li>How the team gets things to "<a href="/donedone" target="_blank">Done</a>" is not transparent or not effective. (Empiricism, Teamwork, Team Process)</li>
    <li>Progress is not transparent. (Empiricism, Team Process)</li>
    <li>Team members may be afraid to bring up issues and risks. (Teamwork, Team Identity)</li>
  </ul>
  <p>You can now form better questions to start digging deeper into the root causes. Your third question might be "How much transparency is there to the progress of work on a daily basis?" The answer might be "We have a Daily Scrum and look at the Scrum Board. Team members report the status for the cards they are working on. Most cards take a few days, sometimes more than a week, to get done. So it&rsquo;s toward the end of a Sprint that people start reporting that they are at risk of not finishing. By then, of course, the testers don&rsquo;t have enough time."</p>
  <p>Based on our experience, possible root causes include the following issues:</p>
  <ul>
    <li>Not understanding the purpose of the Daily Scrum and poor facilitation of the Daily Scrum (Empiricism, Teamwork, Team Process)</li>
    <li>Lack of shared purpose among the Development Team and not holding each other accountable (Teamwork, Team Identity)</li>
    <li>Silos in knowledge and skills that prevent collaboration and getting items completed earlier in the Sprint (Teamwork, Team Identity, Team Process)</li>
  </ul>
  <p>Given the answers provided, ask the following kinds of questions to refine your understanding:</p>
  <ul>
    <li>How much transparency is there to the progress of work on a daily basis? </li>
    <li>Why do team members work on different things?</li>
    <li>How does the Scrum Team adapt when it discovers that there is not enough time to finish everything?</li>
  </ul>
  <p>There are many ways this example conversation could unfold, and in practice it will take longer and require more questions to find the root causes of the problem. Major pain points are often complex and have multiple root causes. Consequently, you will have to prioritize which paths you go down first. You will start to see themes or patterns develop. Look for the root causes that are foundational, meaning they will prevent progress in solving other issues essential to the effectiveness of Scrum.</p>
  <p>Scrum Teams can use this technique in Sprint Retrospectives to help them understand why they are experiencing a particular problem (Figure 1-1).</p>
  <p align="center"> <img alt=""class="img-fluid" src="/images/rca.jpg" ></p>
  <p align="center"><strong>Fi</strong><strong>g</strong><strong>u</strong><strong>r</strong><strong>e 1-1 </strong>A sample output from a root cause analysis</p>
  <p>A figure representing the root cause analysis report of a team is shown. The three major pain points are no "<a href="/donedone" target="_blank">Done</a>" increment, low product value, and releases and customer feedback delayed. They are related to each other as follows: no "<a href="/donedone" target="_blank">Done</a>" increment leads to releases and customer feedback delayed, which in turn leads to low product value. The possible causes for each pain point are shown. The possible causes that affect no "<a href="/donedone" target="_blank">Done</a>" Increment directly are, knowledge/skill silos, poor/unclear DoD, and external dependency. The possible causes that have an indirect effect are: lack of team ownership and accountability which is a result of knowledge/skill silos, scrum team not understanding scrum, and work being forced into sprint and not understood well, which is a result of PO not empowered to make decisions. The possible causes that affect low product value directly are: quality issues impacting customers, and PO focusing on PBI details only. The possible causes that affect the low product value indirectly are: poor or unclear DoD leading to progress not being transparent which further leads to quality issues impacting customers.</p>
  <p>In Figure 1-1, a Scrum Team&rsquo;s three major pain points are circled, and each possible cause is shown as contributing to one or more of the pain points. Now that they have visualized the problems and root causes, the Scrum Team can make better-informed decisions about where to start to fix the most critical issues. Although there is no magic formula to address all possible root causes, an iterative and incremental approach will allow the team to discover the best options for them at this point of time. Improving incrementally is done by employing <a href="/empirical" target="_blank">empiricism</a>. By discussing challenges and their possible root causes, you have created transparency and enabled inspection of that transparent information.</p>
  <p><strong>E</strong><strong>x</strong><strong>p</strong><strong>er</strong><strong>i</strong><strong>m</strong><strong>e</strong><strong>n</strong><strong>t with Different </strong><strong>A</strong><strong>pp</strong><strong>r</strong><strong>oa</strong><strong>c</strong><strong>h</strong><strong>e</strong><strong>s</strong></p>
  <p>Complex problems don&rsquo;t have simple or obvious solutions. Before you make a major investment in a particular solution, make sure that you understand the problem and have a viable solution for fixing it. Regardless of the data, intuition, and experience you have, there will always be some things that you don&rsquo;t know.&nbsp; To move forward without being paralyzed by these unknowns, you can try some experiments to see what might work or to gather more information.&nbsp; Sounds very in alignment with navigating complexity and unpredictability, eh?</p>
  <p>To effectively use experiments to improve, follow these steps:</p>
  <ol>
    <li>Identify the problem you are trying to solve. You&rsquo;ve probably got some ideas about this from your root cause analysis.</li>
    <li>Create a hypothesis about some action that you think you can take to improve.</li>
    <li>Decide what you will do to test this hypothesis.</li>
    <li>Run the experiment.</li>
    <li>Analyze the results. This includes comparing actual results against expectations, reflecting on learning, and getting feedback.</li>
    <li>Refine and repeat. This may include modifying the hypothesis or the experiment. When you design the experiment, be clear about the following points:</li>
  </ol>
  <ul>
    <li>What are you trying to learn?&nbsp; </li>
    <li>How will you measure success?&nbsp; </li>
    <li>How soon can you get feedback?</li>
  </ul>
  <p>When you design the experiment, you also want to consider the potential return on investment (ROI) of the experiment. Ideally, the experiment should be reasonably small, so you can minimize the investment and get feedback sooner. The experiment should also provide sufficient value. The low-hanging fruit may be fast and easy to pick, but you may get less return from it. The higher-value things may take more investment, time, and energy.</p>
  <p>There is no one right answer. You have to consider your team&rsquo;s unique pain points and unique needs. You have to get creative about breaking down the big stuff into smaller experiments of higher value. By doing so, you can improve iteratively and incrementally.</p>
  <p>Now you know where you are&mdash;and you know where you want to be. As you start identifying experiments to run in an effort to move closer to where you want to be, create an improvement backlog. Order these items and begin.</p>
  <p>In the same way that Scrum uses an empirical approach to solve complex problems and deliver valuable products, you can use an empirical approach to solve complex problems and maximize the benefits of Scrum. You can do this at the Scrum Team level and at other levels of the organization beyond the Scrum Team. For an individual Scrum Team, this cycle of continuous improvement is already built into the cadence of a Sprint and the use of a Sprint Retrospective to inspect and adapt as a Scrum Team. In addition, it is up to each Scrum Team to determine the amount of time that needs to be devoted to improvement each Sprint and how to organize and validate the improvements made each Sprint.</p>
  <p><strong>Su</strong><strong>cce</strong><strong>s</strong><strong>s </strong><strong>o</strong><strong>r Failure?</strong></p>
  <p>Is it possible for a success to be a failure? Is it possible for a failure to be a success? You may have noticed that many of the Business Agility assessment questions in
    Appendix A deal with outcomes (e.g., value, quick delivery). Although outcomes are most important, behaviors can also be important when they help build a team&rsquo;s capabilities.</p>
  <p>You cannot control all of the variables in complex work and the unpredictable environmental conditions around you. If you could, then you would plan everything out in advance, follow that plan, and obtain guaranteed results. In the messy real world, however, you may do all the "right things" and still not get the desired outcomes. This is why it is important to look at behaviors as well.</p>
  <p>As you analyze the results of your experiments or improvement steps, consider both outcomes and behaviors, especially their trends over time. For example, consider the situation in which a Development Team uncovers major technical challenges with a new integration. The Development Team started this work on the first day of the Sprint because team members knew it would be more challenging and had previously learned the hard way that they should tackle the riskier items sooner. They swarmed. They informed the Product Owner of the situation and worked together to break the work down smaller. Ultimately, though, they didn&rsquo;t get to "<a href="/donedone" target="_blank">Done</a>."</p>
  <p>In this example, there is a clear failure: The team does not have a "<a href="/donedone" target="_blank">Done</a>" Increment. Yet there is also a success: The team applied learning from their previous experience and did the best they could with what they knew at the time. They collaborated, negotiated, and adapted throughout the Sprint. The key is to find new learning to do even better next time. Perhaps the team will decide to adjust how they do Product Backlog refinement to break items down in a different way. Maybe they will identify a skill gap to address. Maybe they will decide to change their development practices or tools.</p>
  <p>Ultimately, there are two questions to ask:</p>
  <ul>
    <li>Did we do the best we could with what we knew at the time? </li>
    <li>How can we do better?</li>
  </ul>
  <p><strong>Su</strong><strong>mm</strong><strong>a</strong><strong>r</strong><strong>y</strong></p>
  <p>The seven key improvement areas we focus on&mdash;an agile mindset, empiricism, teamwork, team process, team identity, product value, and organization&mdash;provide a lens through which you can inspect your team&rsquo;s ability to achieve its goals and find ways to improve.</p>
  <p>By looking for underlying root causes, running experiments to try to improve, and then inspecting and adapting, you can gradually, consistently, and continuously improve your ability to achieve better results.</p>
  <p>The seven key areas also provide a lens through which you can observe outcomes and behaviors. You can look for underlying root causes, peeling the onion. This lens creates focus and clarity so that you can reflect and take intentional action.</p>
  <p>You improve empiricism by employing empiricism. You must create transparency about the desired outcomes of the improvements and regularly inspect and adapt your way toward maximizing the benefits of Scrum.</p>
  <p><strong>C</strong><strong>a</strong><strong>ll to </strong><strong>A</strong><strong>c</strong><strong>t</strong><strong>ion</strong></p>
  <p>Review your notes from your self-assessment questions and ratings and consider the following points:</p>
  <p>What do you notice about the data? What trends do you see?</p>
  <p>What new insights did you gain from this assessment?</p>
  <p>Using what we have discussed in this chapter for guidance, hold a collaborative discussion with your Scrum Team to take the following steps:</p>
  <ol>
    <li>Identify the top two or three pain points.</li>
  </ol>
  <ol start="2">
    <li>For each one, identify possible root causes.</li>
  </ol>
  <ol start="3">
    <li>Choose two or three root causes to address.</li>
  </ol>
  <ol start="4">
    <li>Create an ordered list of the first improvements you want to implement. For each of these "experiments," be sure to clarify expected outcomes and how you will measure results.</li>
  </ol>
  <ol start="5">
    <li>Begin.</li>
  </ol>
  <p>PMWay thanks: <i>Mastering Professional Scrum 2019</i>.  This is truly awesome work y'all! </p>
  <br>
  <br>
  <br>
  <script src="/bootstrapfouroneone/jquery/jquery.js"></script>
  <script src="/bootstrapfouroneone/jqueryui/jquery-ui.js"></script>
  <link rel="stylesheet" href="/bootstrapfouroneone/jqueryui/jquery-ui.css">
  <script>
  $(document).ready(function () {
    $("#heart, #zapper").draggable({revert:"invalid"});
    $("#target").droppable({
      greddy: true,
      tolerance: 'touch',
      drop: function (event, ui) {

                    ui.draggable.draggable('option', 'revert', 'true');
				 alert("Awesome! You've Got It!  You kill Mechanical (Zombie) Scrum with Heart!  Understanding and Applying the information on this page will make your Heart strong!");


      }
    });




  });




</script>
</div>
{% endif %}

{% endblock %}
